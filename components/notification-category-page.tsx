"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { ArrowLeft, MoreVertical, Home } from "lucide-react"
import { useRouter } from "next/navigation"
import Link from "next/link"

interface Notification {
  id: string
  content: string
  time: string
  read: boolean
  username?: string
  groupId?: string
  groupName?: string
}

interface NotificationCategoryPageProps {
  category: string
}

export function NotificationCategoryPage({ category }: NotificationCategoryPageProps) {
  const router = useRouter()
  const [notifications, setNotifications] = useState<Notification[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    // Simulate loading notifications
    setTimeout(() => {
      let categoryNotifications: Notification[] = []

      switch (category) {
        case "recommendations":
          categoryNotifications = [
            {
              id: "1",
              content: "–ù–æ–≤–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä—è–∂—ñ –¥–æ—Å—Ç—É–ø–Ω–∏–π",
              time: "2 –≥–æ–¥–∏–Ω–∏ —Ç–æ–º—É",
              read: false,
            },
            { id: "2", content: "–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –Ω–æ–≤—ñ –ø—Ä–æ—î–∫—Ç–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–®–∞–ø–∫–∏¬ª", time: "–í—á–æ—Ä–∞, 14:25", read: false },
            { id: "3", content: "–í–∞–º –º–æ–∂—É—Ç—å —Å–ø–æ–¥–æ–±–∞—Ç–∏—Å—è —Ü—ñ —Å—Ö–µ–º–∏ –¥–ª—è –≤'—è–∑–∞–Ω–Ω—è", time: "3 –¥–Ω—ñ —Ç–æ–º—É", read: true },
          ]
          break
        case "user-actions":
          categoryNotifications = [
            { id: "1", content: "–Ü—Ä–∏–Ω–∞ –ø–æ–¥—ñ–ª–∏–ª–∞—Å—è –≤–∞—à–∏–º –ø—Ä–æ—î–∫—Ç–æ–º", time: "1 –≥–æ–¥–∏–Ω—É —Ç–æ–º—É", read: false },
            { id: "2", content: "–û–ª–µ–Ω–∞ –ø—ñ–¥–ø–∏—Å–∞–ª–∞—Å—è –Ω–∞ –≤–∞—Å", time: "3 –≥–æ–¥–∏–Ω–∏ —Ç–æ–º—É", read: false },
            { id: "3", content: "–ù–∞—Ç–∞–ª—ñ—è –∑–≥–∞–¥–∞–ª–∞ –≤–∞—Å —É –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ", time: "–í—á–æ—Ä–∞, 18:30", read: false },
            { id: "4", content: "–¢–µ—Ç—è–Ω–∞ –¥–æ–¥–∞–ª–∞ –≤–∞—à –ø—Ä–æ—î–∫—Ç –¥–æ –æ–±—Ä–∞–Ω–æ–≥–æ", time: "2 –¥–Ω—ñ —Ç–æ–º—É", read: true },
          ]
          break
        case "likes":
          categoryNotifications = [
            {
              id: "1",
              content: "–í–∞—à–æ–º—É –ø—Ä–æ—î–∫—Ç—É ¬´–®–∞–ø–∫–∞ –∑ –ø–æ–º–ø–æ–Ω–æ–º¬ª –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è",
              time: "30 —Ö–≤–∏–ª–∏–Ω —Ç–æ–º—É",
              read: false,
            },
            { id: "2", content: "–í–∞—à–æ–º—É –∫–æ–º–µ–Ω—Ç–∞—Ä—é –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è", time: "5 –≥–æ–¥–∏–Ω —Ç–æ–º—É", read: true },
          ]
          break
        case "comments":
          categoryNotifications = [
            { id: "1", content: "–ù–æ–≤–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –≤–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É ¬´–®–∞—Ä—Ñ¬ª", time: "1 –≥–æ–¥–∏–Ω—É —Ç–æ–º—É", read: false },
          ]
          break
        case "new-members":
          categoryNotifications = [
            {
              id: "1",
              content: "–ú–∞—Ä–∏–Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–ª–∞—Å—è –¥–æ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏",
              time: "2 –≥–æ–¥–∏–Ω–∏ —Ç–æ–º—É",
              read: false,
              username: "marina",
            },
            {
              id: "2",
              content: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≥—Ä—É–ø–∏ ¬´–í'—è–∑–∞–Ω–Ω—è —Å–ø–∏—Ü—è–º–∏¬ª",
              time: "–í—á–æ—Ä–∞, 15:40",
              read: false,
              username: "oleksandr",
              groupId: "knitting-needles",
              groupName: "–í'—è–∑–∞–Ω–Ω—è —Å–ø–∏—Ü—è–º–∏",
            },
          ]
          break
        case "system":
          categoryNotifications = [
            { id: "1", content: "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –¥–æ –≤–µ—Ä—Å—ñ—ó 2.1.0", time: "3 –≥–æ–¥–∏–Ω–∏ —Ç–æ–º—É", read: false },
            {
              id: "2",
              content: "–¢–µ—Ö–Ω—ñ—á–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞ 25.04",
              time: "1 –¥–µ–Ω—å —Ç–æ–º—É",
              read: false,
            },
            { id: "3", content: "–í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ", time: "3 –¥–Ω—ñ —Ç–æ–º—É", read: true },
          ]
          break
        default:
          categoryNotifications = []
      }

      setNotifications(categoryNotifications)
      setLoading(false)
    }, 500)
  }, [category])

  const getCategoryName = () => {
    switch (category) {
      case "recommendations":
        return "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"
      case "user-actions":
        return "–î—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"
      case "likes":
        return "–í–ø–æ–¥–æ–±–∞–Ω–Ω—è"
      case "comments":
        return "–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ"
      case "new-members":
        return "–ù–æ–≤—ñ —É—á–∞—Å–Ω–∏–∫–∏"
      case "system":
        return "–°–∏—Å—Ç–µ–º–Ω—ñ"
      default:
        return "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    }
  }

  const getCategoryIcon = () => {
    switch (category) {
      case "recommendations":
        return "üåü"
      case "user-actions":
        return "üë§"
      case "likes":
        return "‚ù§Ô∏è"
      case "comments":
        return "üí¨"
      case "new-members":
        return "üéâ"
      case "system":
        return "‚ÑπÔ∏è"
      default:
        return "üîî"
    }
  }

  const markAsRead = (id: string) => {
    setNotifications(
      notifications.map((notification) => (notification.id === id ? { ...notification, read: true } : notification)),
    )
  }

  const navigateToProfile = (username: string) => {
    router.push(`/users/${username}`)
  }

  const navigateToGroup = (groupId: string) => {
    router.push(`/community/groups/${groupId}`)
  }

  const renderNotificationContent = (notification: Notification) => {
    if (category === "new-members" && notification.username) {
      const contentParts = notification.content.split(" ")
      const username = contentParts[0]
      const restOfContent = contentParts.slice(1).join(" ")

      if (notification.groupId && notification.groupName) {
        return (
          <>
            <span
              className="font-medium text-primary hover:underline cursor-pointer"
              onClick={() => {
                markAsRead(notification.id)
                navigateToProfile(notification.username!)
              }}
            >
              {username}
            </span>
            {" –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≥—Ä—É–ø–∏ "}
            <span
              className="font-medium text-primary hover:underline cursor-pointer"
              onClick={() => {
                markAsRead(notification.id)
                navigateToGroup(notification.groupId!)
              }}
            >
              ¬´{notification.groupName}¬ª
            </span>
          </>
        )
      } else {
        return (
          <>
            <span
              className="font-medium text-primary hover:underline cursor-pointer"
              onClick={() => {
                markAsRead(notification.id)
                navigateToProfile(notification.username!)
              }}
            >
              {username}
            </span>
            {restOfContent}
          </>
        )
      }
    }

    return notification.content
  }

  return (
    <div className="container mx-auto px-4 py-6 max-w-3xl">
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center">
          <Link href="/" className="mr-2">
            <Button variant="ghost" size="icon" className="h-9 w-9">
              <Home className="h-5 w-5" />
            </Button>
          </Link>
          <Link href="/notifications" className="mr-2">
            <Button variant="ghost" size="icon" className="h-9 w-9">
              <ArrowLeft className="h-5 w-5" />
            </Button>
          </Link>
          <div className="flex items-center">
            <span className="text-xl mr-2">{getCategoryIcon()}</span>
            <h1 className="text-2xl font-bold">{getCategoryName()}</h1>
          </div>
        </div>
        <Button variant="ghost" size="icon">
          <MoreVertical className="h-5 w-5" />
        </Button>
      </div>

      {loading ? (
        <div className="flex justify-center py-8">
          <div className="animate-pulse">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
        </div>
      ) : notifications.length > 0 ? (
        <div className="space-y-1">
          {notifications.map((notification) => (
            <div
              key={notification.id}
              className={`p-4 rounded-lg ${notification.read ? "bg-muted/30" : "bg-muted/50"}`}
            >
              <div className="flex items-start">
                <div
                  className={`w-2 h-2 rounded-full mt-2 mr-2 ${notification.read ? "bg-transparent" : "bg-primary"}`}
                ></div>
                <div className="flex-1">
                  <p className={notification.read ? "text-muted-foreground" : ""}>
                    {renderNotificationContent(notification)}
                  </p>
                  <p className="text-sm text-muted-foreground mt-1">{notification.time}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div className="flex flex-col items-center justify-center py-16 text-center">
          <p className="text-xl mb-2">–ù–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</p>
          <p className="text-muted-foreground">–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—à—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∞–±–æ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –ø—ñ–∑–Ω—ñ—à–µ</p>
        </div>
      )}
    </div>
  )
}
