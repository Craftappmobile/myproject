"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { NotificationToast } from "@/components/notification-toast"

export default function NotificationDemoPage() {
  const [notifications, setNotifications] = useState<
    Array<{
      id: string
      title: string
      action: string
      actionUrl: string
      icon: string
    }>
  >([])

  const addNotification = (type: string) => {
    const id = Date.now().toString()

    let notification = {
      id,
      title: "",
      action: "–í—ñ–¥–∫—Ä–∏—Ç–∏",
      actionUrl: "/",
      icon: "üîî",
    }

    switch (type) {
      case "recommendation":
        notification = {
          ...notification,
          title: "–ù–æ–≤–∏–π –º–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å –∑ –≤'—è–∑–∞–Ω–Ω—è —à–∫–∞—Ä–ø–µ—Ç–æ–∫",
          actionUrl: "/calculators",
          icon: "üåü",
        }
        break
      case "like":
        notification = {
          ...notification,
          title: "–Ü—Ä–∏–Ω–∞ –≤–ø–æ–¥–æ–±–∞–ª–∞ –≤–∞—à –ø—Ä–æ—î–∫—Ç ¬´–®–∞–ø–∫–∞¬ª",
          actionUrl: "/projects",
          icon: "‚ù§Ô∏è",
        }
        break
      case "comment":
        notification = {
          ...notification,
          title: "–ù–æ–≤–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –≤–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É ¬´–°–≤–µ—Ç—Ä¬ª",
          actionUrl: "/community",
          icon: "üí¨",
        }
        break
      case "new-member":
        notification = {
          ...notification,
          title: "–ú–∞—Ä–∏–Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–ª–∞—Å—è –¥–æ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏",
          actionUrl: "/community",
          icon: "üéâ",
        }
        break
      case "system":
        notification = {
          ...notification,
          title: "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –¥–æ –≤–µ—Ä—Å—ñ—ó 2.1.0",
          actionUrl: "/settings",
          icon: "‚ÑπÔ∏è",
        }
        break
      default:
        notification = {
          ...notification,
          title: "–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
          actionUrl: "/notifications",
        }
    }

    setNotifications([...notifications, notification])
  }

  const removeNotification = (id: string) => {
    setNotifications(notifications.filter((notification) => notification.id !== id))
  }

  return (
    <div className="container mx-auto px-4 py-6 max-w-3xl">
      <h1 className="text-2xl font-bold mb-6">–î–µ–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å</h1>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
        <Button onClick={() => addNotification("recommendation")}>
          <span className="mr-2">üåü</span> –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è
        </Button>
        <Button onClick={() => addNotification("like")}>
          <span className="mr-2">‚ù§Ô∏è</span> –í–ø–æ–¥–æ–±–∞–Ω–Ω—è
        </Button>
        <Button onClick={() => addNotification("comment")}>
          <span className="mr-2">üí¨</span> –ö–æ–º–µ–Ω—Ç–∞—Ä
        </Button>
        <Button onClick={() => addNotification("new-member")}>
          <span className="mr-2">üéâ</span> –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫
        </Button>
        <Button onClick={() => addNotification("system")}>
          <span className="mr-2">‚ÑπÔ∏è</span> –°–∏—Å—Ç–µ–º–Ω–µ
        </Button>
      </div>

      <div className="border rounded-lg p-4">
        <h2 className="text-lg font-medium mb-2">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
        <p className="text-muted-foreground">
          –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤–∏—â–µ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å. –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–Ω–∏–∫–Ω—É—Ç—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥.
        </p>
      </div>

      {notifications.map((notification) => (
        <NotificationToast
          key={notification.id}
          title={notification.title}
          action={notification.action}
          actionUrl={notification.actionUrl}
          icon={notification.icon}
          onClose={() => removeNotification(notification.id)}
        />
      ))}
    </div>
  )
}
